## name basic completeness
## failures 5
## cut

my $data = 'foo';
my $obj = bless {}, 'Class::Name';
my $target_user = "Named well";
my $tmp = 12;
my $temp = $a;
my $var = "Duh, it's a var.";
my $data2 = "This will not fail, but will be picked up by ProhibitNumberedNames";

#-----------------------------------------------------------------------------

## name all forms
## failures 3
## cut

my $var = 'crap';
my @var = qw( crap crap );
my %var = ( crap => 'crap' );

#-----------------------------------------------------------------------------

## name add from config
## failures 2
## parms { add_names => 'unspecific vague mumbly' }
## cut

my $unspecific = 'crap';
my $data = 'bonzo';

#-----------------------------------------------------------------------------

## name replace from config
## failures 1
## parms { names => 'unspecific vague mumbly' }
## cut

my $unspecific = 'crap';
my $data = 'bonzo';

#-----------------------------------------------------------------------------

## name Not responsible for variables I didn't declare.
## failures 0
## cut

my $perfectly_valid_name = $data;

#-----------------------------------------------------------------------------

## name Make sure we handle all types of variable declarations and configurations
## failures 7
## cut

my ( $data, $info, $temp );
state ( $obj, $object );
our @info;
local %tmp;
my $lumpy = $data; # Not a problem, becuase it's not ours
my $barfy = @object; # Not a problem, becuase it's not ours

#-----------------------------------------------------------------------------

## name Complain about poorly-named subroutines, too.  Case-insensitive. Ignore BEGIN etc.
## failures 3
## cut

sub info {}
sub TEMP {}
sub Data {}

BEGIN {
    my $x = 4;
}

#-----------------------------------------------------------------------------
# ex: set ft=perl:
